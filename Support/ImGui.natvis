<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

    <Type Name="ax::basic_point&lt;*&gt;">
        <DisplayString>{{ x={x,g} y={y,g} }}</DisplayString>
        <Expand HideRawView="true">
            <Item Name="x">x</Item>
            <Item Name="y">y</Item>
        </Expand>
    </Type>

    <Type Name="ax::basic_size&lt;*&gt;">
        <DisplayString>{{ w={w,g} h={h,g} }}</DisplayString>
        <Expand HideRawView="true">
            <Item Name="w">w</Item>
            <Item Name="h">h</Item>
        </Expand>
    </Type>

    <Type Name="ax::basic_rect&lt;*&gt;">
        <DisplayString>{{ x={x,g} y={y,g} r={x + w,g} b={y + h,g} w={w,g} h={h,g} }}</DisplayString>
        <Expand HideRawView="true">
            <Item Name="left">x</Item>
            <Item Name="top">y</Item>
            <Item Name="right">x + w</Item>
            <Item Name="bottom">y + w</Item>
            <Item Name="width">w</Item>
            <Item Name="height">h</Item>
        </Expand>
    </Type>

    <Type Name="ImGuiLayout">
      <DisplayString Condition="Type == 0">{{ ID: {Id,H} Type=Vertical }}</DisplayString>
      <DisplayString Condition="Type == 1">{{ ID: {Id,H} Type=Horizontal }}</DisplayString>
    </Type>

    <Type Name="ImGuiLayoutItem">
      <DisplayString Condition="Type == 0">{{ Item Size={Size,view(size)} }}</DisplayString>
      <DisplayString Condition="Type == 1">{{ Spring Weight={SpringWeight,g} Spacing={SpringSpacing,g} Size={SpringSize,g} }}</DisplayString>
    </Type>

    <Type Name="ImGuiWindow">
      <DisplayString>ID: {ID,H} {Name,s}</DisplayString>
      <Expand>
        <Item Name="Position">Pos</Item>
        <Item Name="Size">Size</Item>
        <Synthetic Name="Cursor">
          <DisplayString>{{ x={DC.CursorPos.x - DC.CursorStartPos.x,g} y={DC.CursorPos.y - DC.CursorStartPos.y,g} }}</DisplayString>
          <Expand>
            <Item Name="x">DC.CursorPos.x - DC.CursorStartPos.x</Item>
            <Item Name="y">DC.CursorPos.y - DC.CursorStartPos.y</Item>
          </Expand>
        </Synthetic>
        <Synthetic Name="Cursor (Previous Line)">
          <DisplayString>{{ x={DC.CursorPosPrevLine.x - DC.CursorStartPos.x,g} y={DC.CursorPosPrevLine.y - DC.CursorStartPos.y,g} }}</DisplayString>
          <Expand>
            <Item Name="x">DC.CursorPosPrevLine.x - DC.CursorStartPos.x</Item>
            <Item Name="y">DC.CursorPosPrevLine.y - DC.CursorStartPos.y</Item>
          </Expand>
        </Synthetic>
        <Item Name="Size">Size,view(size)</Item>
        <Item Name="Size (Full)">SizeFull,view(size)</Item>
        <Synthetic Name="Line Size">
          <DisplayString>{{w={DC.CursorMaxPos.x - DC.CursorPos.x,g} h={DC.CursorMaxPos.y - DC.CursorPos.y,g} }}</DisplayString>
          <Expand>
            <Item Name="w">DC.CursorMaxPos.x - DC.CursorPos.x</Item>
            <Item Name="h">DC.CursorMaxPos.y - DC.CursorPos.y</Item>
          </Expand>
        </Synthetic>
        <Item Name="Last Item Rect">DC.LastItemRect</Item>
        <Item Name="Child Windows">DC.ChildWindows</Item>
      </Expand>
    </Type>

    <Type Name="ax::Editor::Detail::Object">
        <DisplayString>{{ ID={ID} Live={IsLive} }}</DisplayString>
    </Type>

    <Type Name="crude_json::value">
        <DisplayString Condition="m_Type == 1">{m_Type,en} {*(crude_json::object*)&amp;m_Storage,view(simple)}</DisplayString>
        <DisplayString Condition="m_Type == 2">{m_Type,en} {*(crude_json::array*)&amp;m_Storage,view(simple)}</DisplayString>
        <DisplayString Condition="m_Type == 3">{*(crude_json::string*)&amp;m_Storage,view(simple)}</DisplayString>
        <DisplayString Condition="m_Type == 4">{*(crude_json::boolean*)&amp;m_Storage}</DisplayString>
        <DisplayString Condition="m_Type == 5">{*(crude_json::number*)&amp;m_Storage,g}</DisplayString>
        <DisplayString>{m_Type,en}</DisplayString>
        <StringView Condition="m_Type == 3">*(crude_json::string*)&amp;m_Storage</StringView>
        <Expand>
            <ExpandedItem Condition="m_Type == 1">*(crude_json::object*)&amp;m_Storage,view(simple)</ExpandedItem>
            <ExpandedItem Condition="m_Type == 2">*(crude_json::array*)&amp;m_Storage,view(simple)</ExpandedItem>
        </Expand>
    </Type>

</AutoVisualizer>